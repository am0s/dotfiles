# ~/.profile: executed by the command interpreter for login shells.
# This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login
# exists.
# see /usr/share/doc/bash/examples/startup-files for examples.
# the files are located in the bash-doc package.

# the default umask is set in /etc/profile; for setting the umask
# for ssh logins, install and configure the libpam-umask package.
#umask 022

# if running bash
if [ -n "$BASH_VERSION" ]; then
    # include .bashrc if it exists
    if [ -f "$HOME/.bashrc" ]; then
    export PROFILE_HAS_RUN=1
	. "$HOME/.bashrc"
    fi
fi

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/bin" ] ; then
    PATH="$HOME/bin:$PATH"
fi

# Append extra bin folders to PATH if they exist
if [ -d "$HOME/.dotfiles_root/bin" ]; then
    export PATH="$HOME/.dotfiles_root/bin:PATH"
fi
if [ -d "$HOME/.dotfiles/bin" ]; then
    export PATH="$HOME/.dotfiles/bin:PATH"
fi

if [[ -z $SSH_AUTH_SOCK ]]; then
    # If npiprelay.exe is available use it to pipe the windows ssh-agent to WSL
    # Get it from https://github.com/jstarks/npiperelay
    if which npiperelay.exe >/dev/null; then
        export SSH_AUTH_SOCK=$HOME/.ssh/agent.sock
        ss -a | grep -q $SSH_AUTH_SOCK
        if [ $? -ne 0   ]; then
            rm -f $SSH_AUTH_SOCK
            ( setsid socat UNIX-LISTEN:$SSH_AUTH_SOCK,fork EXEC:"npiperelay.exe -ei -s //./pipe/openssh-ssh-agent",nofork & ) >/dev/null 2>&1
        fi
    elif which keychain >/dev/null; then
        # Use keychain to reuse ssh-agent across multiple logins
        keychain -q
    else
        # If not create normal ssh-agent
        eval $(ssh-agent -s) >/dev/null
    fi
fi
